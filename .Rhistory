knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(tidyverse)
library(tidyverse)
library(haven)
library(readr)
library(tidyverse)
library(haven)
library(readr)
library(dplyr)
library(magrittr) #to use piping %>%
library(class) #knn()
library(MASS) #lda()
library(splines) #bs() ns()
library(cowplot) #plot_grid()
library(psych) #describeBy()
#tree based methods
library(rpart)
library(rpart.plot)
library(randomForest)
library(pROC) #ROC curve
library(caret) #bagging,  boosting, rf
library(caret) #bagging,  boosting, rf
#datasets
library(DAAG) #elastic
library(mice) #boys
library(caret) #bagging,  boosting, rf
#datasets
library(DAAG) #elastic
library(mice) #boys
library(MASS) #Boston & Default
sleepdata <- read.csv(url("https://www.kaggle.com/datasets/uom190346a/sleep-health-and-lifestyle-dataset"))
View(sleepdata)
df <- read.csv('data/Sleep_health_and_lifestyle_dataset.csv')
View(df)
sleepdata <- read.csv('data/Sleep_health_and_lifestyle_dataset.csv')
View(sleepdata)
#summary of the data
summary(sleepdata)
#visualize the data
plot(sleepdata)
#check for the most important variables
describeBy(sleepdata$Sleep_Quality, group = sleepdata$Gender)
describeBy(sleepdata$Sleep_Quality, group = sleepdata$Age)
describeBy(sleepdata$Sleep_Quality, group = sleepdata$Occupation)
describeBy(sleepdata$Sleep_Quality, group = sleepdata$Physical_Activity)
describeBy(sleepdata$Sleep_Quality, group = sleepdata$Stress)
describeBy(sleepdata$Sleep_Quality, group = sleepdata$BMI_Category)
md.pattern(sleepdata)
#check how many unique values of occupation, to see if it makes sense to convert to factor, or if there are too many unique values
unique(sleepdata$Occupation)
sleepdata %<>%
mutate(Gender   = as.factor(Gender),
Occupation = as.factor(Occupation),
BMI.Category = as.factor(BMI.Category)) %>%
select(-Person.ID)
